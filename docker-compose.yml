version: '3'
services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
            args:
                uid: "${UID:-1000}"
                user: "${USER:-moustapha}"
        container_name: "${PROJECT_NAME:?}_app"
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - "./:/var/www/html:cached"
        networks:
            - local-network
        depends_on:
            - db

    webserver:
        image: nginx:stable-alpine
        container_name: "${PROJECT_NAME:?}_webserver"
        restart: unless-stopped
        tty: true
        ports:
            - "${APP_PORT:-80}:80"
        volumes:
            - "./:/var/www/html"
            - "./docker/nginx:/etc/nginx/conf.d"
        networks:
            - local-network
        depends_on:
            - app

    db:
        image: mysql/mysql-server:8.0
        container_name: "${PROJECT_NAME:?}_db"
        restart: unless-stopped
        tty: true
        environment:
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        volumes:
            - "db-data:/var/lib/mysql"
        networks:
            - local-network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s

    mailhog:
        image: mailhog/mailhog:v1.0.1
        container_name: "${PROJECT_NAME:?}_mailhog"
        ports:
            - "${FORWARD_MAILHOG_PORT:-1025}:1025"
            - "${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025"
        networks:
            - local-network
networks:
    local-network:
        driver: bridge
volumes:
    db-data:
        driver: local
